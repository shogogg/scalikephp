<?php
/**
 * Copyright (c) 2017 shogogg <shogo@studiofly.net>
 *
 * This software is released under the MIT License.
 * http://opensource.org/licenses/mit-license.php
 */
declare(strict_types=1);

namespace ScalikePHP\Support;

/**
 * ClosureIterator - Rewindable iterator generated by closure.
 */
final class ClosureIterator implements \IteratorAggregate
{

    /**
     * @var \Closure
     */
    protected $closure;

    /**
     * CachingIterator constructor.
     *
     * @param \Closure $closure
     */
    public function __construct(\Closure $closure)
    {
        $this->closure = $closure;
    }

    /** {@inheritdoc} */
    public function getIterator(): \Iterator
    {
        $g = call_user_func($this->closure);
        $iterator = new CachingIterator($g);
        return $iterator->getIterator();
    }

}
